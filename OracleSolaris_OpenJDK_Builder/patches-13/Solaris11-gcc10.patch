https://github.com/openjdk/jdk/commit/a59e8a7f6fed2accd1034eebf16545ef78c3ea1b
https://github.com/openjdk/jdk/commit/1d42f083c1b64e68eec19471c3f7045c6cbc841f
https://github.com/openjdk/jdk/commit/03721247d8f3d6b2aefe2826a59c10fd1fad51cb

--- jdk13u-jdk-13.0.5-0/src/java.base/unix/native/libjava/childproc.h
+++ jdk13u-jdk-13.0.5-0/src/java.base/unix/native/libjava/childproc.h
@@ -126,7 +126,7 @@
  * The cached and split version of the JDK's effective PATH.
  * (We don't support putenv("PATH=...") in native code)
  */
-const char * const *parentPathv;
+extern const char * const *parentPathv;
 
 ssize_t restartableWrite(int fd, const void *buf, size_t count);
 int restartableDup2(int fd_from, int fd_to);
--- jdk13u-jdk-13.0.5-0/src/java.base/unix/native/libjava/childproc.c
+++ jdk13u-jdk-13.0.5-0/src/java.base/unix/native/libjava/childproc.c
@@ -33,6 +33,7 @@
 
 #include "childproc.h"
 
+const char * const *parentPathv;
 
 ssize_t
 restartableWrite(int fd, const void *buf, size_t count)
--- jdk13u-jdk-13.0.5-0/src/jdk.sctp/unix/native/libsctp/SctpNet.c
+++ jdk13u-jdk-13.0.5-0/src/jdk.sctp/unix/native/libsctp/SctpNet.c
@@ -43,6 +43,13 @@
 static const char* nativeSctpLib = "libsctp.so.1";
 static jboolean funcsLoaded = JNI_FALSE;
 
+sctp_getladdrs_func* nio_sctp_getladdrs;
+sctp_freeladdrs_func* nio_sctp_freeladdrs;
+sctp_getpaddrs_func* nio_sctp_getpaddrs;
+sctp_freepaddrs_func* nio_sctp_freepaddrs;
+sctp_bindx_func* nio_sctp_bindx;
+sctp_peeloff_func* nio_sctp_peeloff;
+
 JNIEXPORT jint JNICALL DEF_JNI_OnLoad
   (JavaVM *vm, void *reserved) {
     return JNI_VERSION_1_2;
--- jdk13u-jdk-13.0.5-0/src/jdk.sctp/unix/native/libsctp/Sctp.h
+++ jdk13u-jdk-13.0.5-0/src/jdk.sctp/unix/native/libsctp/Sctp.h
@@ -322,12 +322,12 @@
 
 #endif /* __linux__ */
 
-sctp_getladdrs_func* nio_sctp_getladdrs;
-sctp_freeladdrs_func* nio_sctp_freeladdrs;
-sctp_getpaddrs_func* nio_sctp_getpaddrs;
-sctp_freepaddrs_func* nio_sctp_freepaddrs;
-sctp_bindx_func* nio_sctp_bindx;
-sctp_peeloff_func* nio_sctp_peeloff;
+extern sctp_getladdrs_func* nio_sctp_getladdrs;
+extern sctp_freeladdrs_func* nio_sctp_freeladdrs;
+extern sctp_getpaddrs_func* nio_sctp_getpaddrs;
+extern sctp_freepaddrs_func* nio_sctp_freepaddrs;
+extern sctp_bindx_func* nio_sctp_bindx;
+extern sctp_peeloff_func* nio_sctp_peeloff;
 
 jboolean loadSocketExtensionFuncs(JNIEnv* env);
 
--- jdk13u-jdk-13.0.5-0/src/java.security.jgss/share/native/libj2gss/NativeFunc.h
+++ jdk13u-jdk-13.0.5-0/src/java.security.jgss/share/native/libj2gss/NativeFunc.h
@@ -277,6 +277,6 @@
 typedef GSS_FUNCTION_TABLE *GSS_FUNCTION_TABLE_PTR;
 
 /* global GSS function table */
-GSS_FUNCTION_TABLE_PTR ftab;
+extern GSS_FUNCTION_TABLE_PTR ftab;
 
 #endif
--- jdk13u-jdk-13.0.5-0/src/java.security.jgss/share/native/libj2gss/NativeFunc.c
+++ jdk13u-jdk-13.0.5-0/src/java.security.jgss/share/native/libj2gss/NativeFunc.c
@@ -27,6 +27,9 @@
 #include <stdlib.h>
 #include "NativeFunc.h"
 
+/* global GSS function table */
+GSS_FUNCTION_TABLE_PTR ftab;
+
 /* standard GSS method names (ordering is from mapfile) */
 static const char RELEASE_NAME[]                = "gss_release_name";
 static const char IMPORT_NAME[]                 = "gss_import_name";
